""""""""""""""""""""""
" < Leader & info
""""""""""""""""""""""
let mapleader=,

nnoremap ? :help nv<CR>

""""""""""""""""""""""
" < Clipboard
""""""""""""""""""""""
" yank to system clipboard
" set via setting: "vintageous_use_sys_clipboard": true,

" Y consistent with D and C to the end of linek
nnoremap Y y$

" always paste what was yanked, not what was deleted
nnoremap gp "0p
vnoremap gp "0p

""""""""""""""""""""""
" < Search
""""""""""""""""""""""

set ignorecase
set smartcase
set incsearch
set hlsearch

" no modfier key for jumping to next word
noremap + *

" quicker find mode (by mirroring American keyboard layout on German keyboard layout)
noremap - /

" [M]ute search highlights
nnoremap <C-m> :nohlsearch<CR>

""""""""""""""""""""""
" < Nagivation
""""""""""""""""""""""

" Scroll horizontally back
nnoremap Q mz0`z

" Have j and k navigate visual lines rather than logical ones
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k

" HJKL behaves like hjkl, but bigger distance (best used with scroll offset plugin)
" h 0^ ensures scrolling to the left (when there is no wrapping)
nnoremap H 0^
vnoremap H ^
noremap L $
noremap J 7j
noremap K 7k

" cause easier to press, lol
noremap [ {
noremap ] }

" Goto Mark
nnoremap Ã¤ `

" Next/Previous Sublime Linter Errors
nnoremap gl ]l
nnoremap gL [l

" [g]oto [z]pelling Errors (Spelling)
nnoremap gz ]s
nnoremap gZ [s
" add word to dictionary/undo adding to dictionary (already built in)
" nnoremap zg zg

" [g]oto [d]efinition
nnoremap gd :LspSymbolDefinition side_by_side=false<CR>
nnoremap gD :LspSymbolReferences<CR>

" [h]over popup
nnoremap <leader>h :LspHover<CR>

" [g]oto [s]ymbol
noremap gs :ShowOverlay overlay=goto text=@<CR>

" [g]oto [o]pen file (= Quick Switcher)
noremap go :OpenBrowse<CR>

" [g]oto [f]ollow link under cursor
nnoremap gf :OpenUrlUnderCursor<CR>

" alt+right/left work like in macOS. Needed to make some macros work in Normal Mode
nnoremap <M-Right> e
nnoremap <M-Left> b

" go to last change - https://vimhelp.org/motion.txt.html#g%3B
nnoremap g; u<C-r>

""""""""""""""""""""""
" < Editing
""""""""""""""""""""""

""""""""""""""""""""""
" << General Editing
""""""""""""""""""""""

" don't pollute the register
noremap x "_x
nnoremap c "_c
nnoremap C "_C

" Consistent with Insert Mode Selection
vnoremap <BS> "_d

" UNDO consistently on one key
noremap U <C-r>

" CASE SWITCH (added h for vertical navigation)
nnoremap Ãœ ~h
" Switch Case of first letter of the word = (toggle between Capital and lower case)
nnoremap Ã¼ mzlblgueh~`z

" TRANSPOSE
" current & next char
nnoremap Ã¶ xp
" current & previous char
nnoremap Ã– xhhp
" current & next word
nnoremap Ã„ dawelpb

""""""""""""""""""""""
" << Line-Based Editing
""""""""""""""""""""""

" [M]erge lines
noremap M J

" Add Blank Line above/below
nnoremap = mzO<Esc>`z
nnoremap _ mzo<Esc>`z
" these require cursor being on the right end of the selection though...
vnoremap = <Esc>O<Esc>gv
vnoremap _ <Esc>o<Esc>gv


" Append punctuation to end of line
nnoremap <leader>, mzA,<Esc>`z
nnoremap <leader>; mzA;<Esc>`z
nnoremap <leader>. mzA.<Esc>`z
nnoremap <leader>" mzA"<Esc>`z
nnoremap <leader>' mzA'<Esc>`z
nnoremap <leader>: mzA:<Esc>`z
nnoremap <leader>) mzA)<Esc>`z
nnoremap <leader>( mzA(<Esc>`z
nnoremap <leader>] mzA]<Esc>`z
nnoremap <leader>[ mzA[<Esc>`z
nnoremap <leader>{ mzA{<Esc>`z
nnoremap <leader>} mzA}<Esc>`z
nnoremap <leader>} mzA}<Esc>`z

" append space
nnoremap ! a <Esc>hh

" Remove last character from line
nnoremap X mz$"_x`z

""""""""""""""""""""""
" << Indentation
""""""""""""""""""""""

" Make indention work like in other editors
nnoremap <Tab> >>
nnoremap <S-Tab> <<
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

nnoremap ^ =
vnoremap ^ =

""""""""""""""""""""""
" << language-specific
""""""""""""""""""""""

" Markdown: allows Double Enter to add new line and indent bullet points
nnoremap <CR> A

" Markdown: Prepend Bullet or Blockquote
nnoremap <leader>- mzI- <Esc>`z
nnoremap <leader>< mzI> <Esc>`z
nnoremap <leader>> mzI> <Esc>`z

" Markdown: [g]oto footnote [d]efinition (and back)
noremap g<M-d> :MdeMagicFootnotes<CR>h<Esc>

" CSS: double/remove [c]lass under cursor
nnoremap <leader>c mzlEF.yEEp`z
nnoremap <leader>C lF.d/[.\s]<CR>

" CSS: Important Switcher
noremap <leader>i :ImportantSwitcher<CR>

" JS: make template string variable
nnoremap <leader>t ysiw}i$<Esc>l

""""""""""""""""""""""
" < Visual Mode
""""""""""""""""""""""
" so that VV... in normal mode just selects more lines
vnoremap V j

""""""""""""""""""""""
" < Text Objects
""""""""""""""""""""""

" Change Word/Selection
nnoremap <Space> "_ciw
vnoremap <Space> "_c

" Delete Word/Selection
nnoremap <S-Space> "_daw
vnoremap <S-Space> "_d

" [R]eplace Word with register content
nnoremap R viw"0p
vnoremap R "0P

""""""""""""""""""""""
" < Insert Mode
""""""""""""""""""""""
" implemented via in "Default (OSX).sublime-keymap"
" since neovintageousrc cannot do that in its rc file

""""""""""""""""""""""
" < Surround
""""""""""""""""""""""
" emulate some smarter punctuation bindings from Smarter MD Hotkeys
nnoremap <C-2> ysiw"
vnoremap <C-2> S"

nnoremap <C-0> ysiw]
vnoremap <C-0> iwoiwS]

nnoremap <C-8> ysiw)
vnoremap <C-8> iwoiwS)
nnoremap <C-9> ysiw)
vnoremap <C-9> iwoiwS)

""""""""""""""""""""""
" < not needed
""""""""""""""""""""""
" Tabs, Folding, and Sneak already built in

""""""""""""""""""""""
" < Window Management
""""""""""""""""""""""
" most <C-w> commands are only unlocked by using the Sublime Origami Plugin
" https://vimhelp.org/index.txt.html#CTRL-W

" move buffer instead of copying it when splitting
nnoremap <C-w>v <C-w>v<C-w>h<C-w>c<C-w>l
vnoremap <C-w>v <C-w>v<C-w>h<C-w>c<C-w>l
nnoremap <C-w>s <C-w>s<C-w>k<C-w>c<C-w>j
vnoremap <C-w>s <C-w>s<C-w>k<C-w>c<C-w>j

" [g]oto next/prev [w]indow (analogous to gt)
nnoremap gw :FocusNeighboringGroup<CR>
vnoremap gw :FocusNeighboringGroup<CR>
nnoremap gW :FocusNeighboringGroup forward=false<CR>
vnoremap gW :FocusNeighboringGroup forward=false<CR>

" using Origami Commands
" https://github.com/SublimeText/Origami/blob/master/Origami.sublime-commands
nnoremap <C-w>+ :ZoomPane fraction=0.9<CR>
" this is essentially nnoremap <C-w>+ <C-w>_

""""""""""""""""""""""
" < Options
""""""""""""""""""""""
" textwidth for gq
set textwidth=80

" Shortcuts from vim.unimpaired
" [O]ption: line [n]umbers
noremap <leader>on yon
" [O]ption: [s]pellcheck
noremap <leader>os yos
" [O]ption: line [w]rap
noremap <leader>ow yow

""""""""""""""""""""""
" < Sorting
"""""""""""""""""""""

" [s]ort [s]election
vnoremap <leader>ss :'<,'>sort<CR>

" [s]ort [a]rray, if multi-line (+ remove duplicates)
nnoremap <leader>sa vi]:sort u<CR>

" [s]ort [g]lobally
nnoremap <leader>sg :sort<CR>

" [s]ort [p]aragraph
nnoremap <leader>sp vip:sort<CR>

"""""""""""""""""""""""""""""
" < Neovintageous Limitations
"""""""""""""""""""""""""""""
" - Normal `map` (as opposed to noremap) is not supported any i command ðŸ™ˆ
" - macros are not saved to a register
" - gi does not work https://github.com/NeoVintageous/NeoVintageous/issues/810
" - Neovintageous does not allow for any insert mode modifications, these need
"   to be done in Sublime, with
"   "context": [{"key": "vi_insert_mode_aware"}]

