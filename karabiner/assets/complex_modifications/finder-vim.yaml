title: "Finder Vim Controls"
homepage: https://github.com/chrisgrieser/dotfiles/karabiner
anchors:
  - conditions:
      - &is-finder
        type: frontmost_application_if
        bundle_identifiers:
          - ^com\.apple\.finder$
      - &is-insert-mode
        type: variable_if
        name: FINDER_INSERT_MODE
        value: true
      - &not-insert-mode
        type: variable_unless
        name: FINDER_INSERT_MODE
        value: true
      - &is-search-mode
        type: variable_if
        name: FINDER_SEARCH_MODE
        value: true
      - &not-search-mode
        type: variable_unless
        name: FINDER_SEARCH_MODE
        value: true
      - &cut-active
        type: variable_if
        name: FINDER_CUT_ACTIVE
        value: true
      - &cut-inactive
        type: variable_unless
        name: FINDER_CUT_ACTIVE
        value: true
  #─────────────────────────────────────────────────────────────────────────────
  - to:
      - &enter-insert-mode
        set_variable: # Insert Mode
          name: FINDER_INSERT_MODE
          value: true
      - &leave-insert-mode
        set_variable:
          name: FINDER_INSERT_MODE
          value: false
      - &insert-notice
        set_notification_message:
          id: insert-notice
          text: "✏️  INSERT"
      - &remove-insert-notice
        set_notification_message:
          id: insert-notice
          text: ""
      - &enter-search-mode
        set_variable: # Search Mode
          name: FINDER_SEARCH_MODE
          value: true
      - &leave-search-mode
        set_variable:
          name: FINDER_SEARCH_MODE
          value: false
      - &search-notice
        set_notification_message:
          id: search-notice
          text: "\U0001F50D SEARCH"
      - &remove-search-notice
        set_notification_message:
          id: search-notice
          text: ""
      - &remove-cut-notice
        set_notification_message: # Cut Mode
          id: cut-notice
          text: ""
      - &cut-notice
        set_notification_message:
          id: cut-notice
          text: "✂️ CUT"
      - &start-cut
        set_variable:
          name: FINDER_CUT_ACTIVE
          value: true
      - &end-cut
        set_variable:
          name: FINDER_CUT_ACTIVE
          value: false
#───────────────────────────────────────────────────────────────────────────────
#───────────────────────────────────────────────────────────────────────────────
#───────────────────────────────────────────────────────────────────────────────
rules:
  - description: "\U0001F4C2 Finder Vim Controls"
    manipulators:
      # hjkl, ggG
      - type: basic
        from: {key_code: j}
        to:
          - key_code: down_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: k}
        to:
          - key_code: up_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: h}
        to:
          - key_code: up_arrow
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: l}
        to:
          - key_code: down_arrow
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: g}
        to:
          - key_code: up_arrow
            modifiers: [option]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: g
          modifiers: {mandatory: [shift]}
        to:
          - key_code: down_arrow
            modifiers: [option]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # INSERT MODE
      # enter
      - type: basic # Rename
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic # Switch Directory
        from: {key_code: s}
        to:
          - {key_code: g, modifiers: [command, shift]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic # so you can insert text in Alfred/Spotlight while Finder is frontmost
        from:
          key_code: spacebar
          modifiers: {mandatory: [command]}
        to:
          - {key_code: spacebar, modifiers: [command]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # leave
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from: {key_code: caps_lock}
        to:
          - key_code: escape
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from: {key_code: escape}
        to:
          - key_code: escape
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from:
          key_code: w
          modifiers: {mandatory: [command]}
        to:
          - {key_code: w, modifiers: [command]}
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Selections & View
      # a = select all
      - type: basic
        from: {key_code: a}
        to:
          - {key_code: a, modifiers: [command]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: period}
        to:
          - {key_code: period, modifiers: [command, shift]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # <S-Space> = add down to selection
      - type: basic
        from:
          key_code: spacebar
          modifiers: {mandatory: [shift]}
        to:
          - {key_code: down_arrow, modifiers: [shift]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Basic File Operations
      # d = delete
      - type: basic
        from: {key_code: d}
        to:
          - key_code: delete_or_backspace
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # y = yank
      - type: basic
        from: {key_code: z} # y = z in German Keyboard
        to:
          - key_code: c
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # r = replicate (duplicate)
      - type: basic
        from: {key_code: r}
        to:
          - key_code: d
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # p = paste
      - type: basic
        from: {key_code: p}
        to:
          - key_code: v
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *cut-inactive, *not-search-mode]
      # i = info window
      - type: basic
        from: {key_code: i}
        to:
          - key_code: i
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # v = view window
      - type: basic
        from: {key_code: v}
        to:
          - key_code: j
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # u = undo
      - type: basic
        from: {key_code: u}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # U = redo
      - type: basic
        from:
          key_code: u
          modifiers: {mandatory: [shift]}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command, shift]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # N = New Folder
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [shift]}
        to:
          - key_code: n
            modifiers: [command, shift]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # n = New File
      - type: basic
        from: {key_code: n}
        to:
          - shell_command: |
              folder=$(osascript -e '
                tell application "Finder"
                  if exists Finder window 1 then
                    return POSIX path of (target of Finder window 1 as alias)
                  end if
                end tell')
              touch "$folder/new"
              open -R "$folder/new"
          - key_code: vk_none
            hold_down_milliseconds: 750 # delay needed as Finder needs to pick up new file
          - key_code: return_or_enter
          - *enter-insert-mode
          - *insert-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Navigation
      # o = open fold
      - type: basic
        from: {key_code: o}
        to:
          - key_code: right_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # c = close fold
      - type: basic
        from: {key_code: c}
        to:
          - key_code: left_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # <C-h> = History Back
      - type: basic
        from:
          key_code: h
          modifiers: {mandatory: [control]}
        to:
          - key_code: semicolon # German ö
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # <C-l> = History Forward
      - type: basic
        from:
          key_code: h
          modifiers: {mandatory: [control]}
        to:
          - key_code: quote # German ä
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Search Mode
      # Enter/Exit
      - type: basic
        from: {key_code: f}
        to:
          - *enter-search-mode
          - *search-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: capslock}
        to:
          - *leave-search-mode
          - *remove-search-notice
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: escape}
        to:
          - *leave-search-mode
          - *remove-search-notice
        conditions: [*is-finder, *is-search-mode]
      # One-Letter-Searches
      - type: basic
        from: {key_code: a}
        to: [{key_code: a}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: b}
        to: [{key_code: b}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: c}
        to: [{key_code: c}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: d}
        to: [{key_code: d}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: e}
        to: [{key_code: e}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: f}
        to: [{key_code: f}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: g}
        to: [{key_code: g}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: h}
        to: [{key_code: h}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: i}
        to: [{key_code: i}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: j}
        to: [{key_code: j}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: k}
        to: [{key_code: k}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: l}
        to: [{key_code: l}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: m}
        to: [{key_code: m}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: n}
        to: [{key_code: n}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: o}
        to: [{key_code: o}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: p}
        to: [{key_code: p}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: q}
        to: [{key_code: q}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: r}
        to: [{key_code: r}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: s}
        to: [{key_code: s}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: t}
        to: [{key_code: t}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: u}
        to: [{key_code: u}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: v}
        to: [{key_code: v}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: w}
        to: [{key_code: w}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: x}
        to: [{key_code: x}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: y}
        to: [{key_code: y}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: z}
        to: [{key_code: z}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: period}
        to: [{key_code: period}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "\U0001F4C2 Move Files"
    manipulators:
      # m = move
      - type: basic
        from: {key_code: m}
        to:
          - key_code: c
            modifiers: [command]
          - *start-cut
          - *cut-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # p / cmd+v = paste cutted thing
      - type: basic
        from: {key_code: p}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *cut-active]
        to:
          - key_code: v
            modifiers: [command, option]
          - *end-cut
          - *remove-cut-notice
      - type: basic
        from:
          key_code: v
          modifiers: {mandatory: [command]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *cut-active]
        to:
          - key_code: v
            modifiers: [command, option]
          - *end-cut
          - *remove-cut-notice
      # y / cmd+c = yank, which also aborts cut
      - type: basic
        from: {key_code: z} # y and z switched on German keyboard
        to:
          - key_code: c
            modifiers: [command]
          - *end-cut
          - *remove-cut-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *cut-active]
      - type: basic
        from:
          key_code: c
          modifiers: {mandatory: [command]}
        to:
          - key_code: c
            modifiers: [command]
          - *end-cut
          - *remove-cut-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *cut-active]
      # Esc = Abort Cut
      - type: basic
        from: {key_code: caps_lock}
        to:
          - *end-cut
          - *remove-cut-notice
        conditions: [*is-finder, *cut-active]
      - type: basic
        from: {key_code: escape}
        to:
          - *end-cut
          - *remove-cut-notice
        conditions: [*is-finder, *cut-active]
  #─────────────────────────────────────────────────────────────────────────────
  #─────────────────────────────────────────────────────────────────────────────
  #─────────────────────────────────────────────────────────────────────────────
  - description: "\U0001F4C2 Finder Extras"
    manipulators:
      # Sidebar
      - type: basic
        from:
          key_code: "1"
          modifiers: {mandatory: [command]}
        to:
          - key_code: s
            modifiers:
              - command
              - option
        conditions: [*is-finder]
      # copy path
      - type: basic
        from:
          key_code: p
          modifiers: {mandatory: [control]}
        to:
          - key_code: c
            modifiers:
              - command
              - option
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # copy name
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [control]}
        to:
          - key_code: return_or_enter
          - key_code: a
            modifiers: [command]
          - key_code: c
            modifiers: [command]
          - key_code: return_or_enter
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "\U0001F4C2 Open Locations (Globally Active)"
    manipulators:
      # Hyper + ⌫ = Open Trash
      - type: basic
        from:
          key_code: delete_or_backspace
          modifiers: {mandatory: [control, command, shift, option]}
        to:
          - shell_command: open -a "Finder" ~/.Trash
          - key_code: vk_none
            hold_down_milliseconds: 200
          - key_code: "2" # list view
            modifiers: [command]
      # Hyper + F: Open $WD
      - type: basic
        from:
          key_code: f
          modifiers: {mandatory: [control, command, shift, option]}
        to:
          - shell_command: open "$HOME/Library/Mobile Documents/com~apple~CloudDocs/File Hub/"
