title: "Finder Vim Controls"
homepage: https://github.com/chrisgrieser/dotfiles/karabiner
author: [pseudometa]
anchors:
  - conditions:
      - &is-finder
        type: frontmost_application_if
        bundle_identifiers: [^com\.apple\.finder$]
      - &is-German-keyboard
        type: input_source_if
        input_sources:
          - language: ^de$
      - &not-German-keyboard
        type: input_source_unless
        input_sources:
          - language: ^de$
      - &is-insert-mode
        type: variable_if
        name: FINDER_INSERT_MODE
        value: true
      - &not-insert-mode
        type: variable_unless
        name: FINDER_INSERT_MODE
        value: true
      - &is-search-mode
        type: variable_if
        name: FINDER_SEARCH_MODE
        value: true
      - &not-search-mode
        type: variable_unless
        name: FINDER_SEARCH_MODE
        value: true
      - &move-active
        type: variable_if
        name: FINDER_MOVE_ACTIVE
        value: true
      - &move-inactive
        type: variable_unless
        name: FINDER_MOVE_ACTIVE
        value: true
  #─────────────────────────────────────────────────────────────────────────────
  - to:
      - &enter-insert-mode
        set_variable: # Insert Mode
          name: FINDER_INSERT_MODE
          value: true
      - &leave-insert-mode
        set_variable:
          name: FINDER_INSERT_MODE
          value: false
      - &insert-notice
        set_notification_message:
          id: insert-notice
          text: "✏️  INSERT"
      - &remove-insert-notice
        set_notification_message:
          id: insert-notice
          text: ""
      - &enter-search-mode
        set_variable: # Search Mode
          name: FINDER_SEARCH_MODE
          value: true
      - &leave-search-mode
        set_variable:
          name: FINDER_SEARCH_MODE
          value: false
      - &search-notice
        set_notification_message:
          id: search-notice
          text: "\U0001F50D SEARCH"
      - &remove-search-notice
        set_notification_message:
          id: search-notice
          text: ""
      - &remove-move-notice
        set_notification_message: # Move Active
          id: move-notice
          text: ""
      - &move-notice
        set_notification_message:
          id: move-notice
          text: "✂️ move active"
      - &start-move
        set_variable:
          name: FINDER_MOVE_ACTIVE
          value: true
      - &end-move
        set_variable:
          name: FINDER_MOVE_ACTIVE
          value: false
#───────────────────────────────────────────────────────────────────────────────
#───────────────────────────────────────────────────────────────────────────────
#───────────────────────────────────────────────────────────────────────────────
rules:
  - description: "\U0001F4C2 Finder Vim Controls"
    manipulators:
      # hjkl
      - type: basic
        from: {key_code: j}
        to: # not to_if_alone since it blocks repeat
          - key_code: down_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: k}
        to: # not to_if_alone since it blocks repeat
          - key_code: up_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: h}
        to_if_alone:
          - key_code: up_arrow
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: l}
        to_if_alone:
          - key_code: down_arrow
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # gg, G, J, K
      - type: basic
        from: {key_code: g}
        to:
          - key_code: up_arrow
            modifiers: [option]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: g
          modifiers: {mandatory: [shift]}
        to_if_alone:
          - key_code: down_arrow
            modifiers: [option]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: j
          modifiers: {mandatory: [shift]}
        to:
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: k
          modifiers: {mandatory: [shift]}
        to:
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # :help & quick movement
      - type: basic
        from:
          key_code: hyphen # ? in German keyboard
          modifiers: {mandatory: [shift]}
        to:
          - shell_command: qlmanage -p "$HOME/.config/visualized-keyboard-layout/macos-finder-vim-mode.png" || open "$HOME/.config/karabiner/assets/macos-finder-vim-mode.png"
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      - type: basic
        from:
          key_code: q
        to:
          - shell_command: |
              target="$HOME/Library/Mobile Documents/com~apple~CloudDocs/File Hub/"
              if [[! -e "$target"]]
              osascript -e '
                set home to (POSIX path of (path to home folder as string))
                set the_folder to (home & "/Library/Mobile Documents/com~apple~CloudDocs/File Hub/") as POSIX file
                tell application "Finder"
                  if front Finder window exists then
                    set target of front Finder window to the_folder
                  else
                    open the_folder
                  end if
                end tell'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: delete_or_backspace
        to:
          - shell_command: |
              osascript -e '
                set home to (POSIX path of (path to home folder as string))
                set the_folder to (home & ".Trash") as POSIX file
                tell application "Finder"
                  if front Finder window exists then
                    set target of front Finder window to the_folder
                  else
                    open the_folder
                  end if
                end tell'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # INSERT MODE
      # enter
      - type: basic # Rename
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic # Switch Directory
        from: {key_code: s}
        to:
          - {key_code: g, modifiers: [command, shift]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic # so you can insert text in Alfred/Spotlight while Finder is frontmost
        from:
          key_code: spacebar
          modifiers: {mandatory: [command]}
        to:
          - {key_code: spacebar, modifiers: [command]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic # Alfred Custom Move-to Command
        from:
          key_code: m
          modifiers: {mandatory: [command, shift]}
        to:
          - {key_code: m, modifiers: [command, shift]}
          - *insert-notice
          - *enter-insert-mode
      - type: basic # Alfred Custom Clipboard Search
        from:
          key_code: f18
          modifiers: {mandatory: [command, shift]}
        to:
          - {key_code: f18, modifiers: [command, shift]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # leave
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from: {key_code: caps_lock}
        to_if_alone:
          - key_code: escape
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from: {key_code: escape}
        to:
          - key_code: escape
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from: {key_code: f18}
        to:
          - key_code: f18
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      - type: basic
        from:
          key_code: w
          modifiers: {mandatory: [command]}
        to:
          - {key_code: w, modifiers: [command]}
          - *remove-insert-notice
          - *leave-insert-mode
        conditions: [*is-finder, *is-insert-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Window & Tabs
      # w = close window/tab (:[tab]close)
      - type: basic
        from: {key_code: w}
        to:
          - {key_code: w, modifiers: [command]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
        # Cycle windows/tabs (:bnext, :tabnext)
      - type: basic
        from: {key_code: b}
        to_if_alone:
          - {key_code: grave_accent_and_tilde, modifiers: [command]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: t}
        to_if_alone:
          - {key_code: tab, modifiers: [control]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Selections
      # a = select all
      - type: basic
        from: {key_code: a}
        to_if_alone:
          - {key_code: a, modifiers: [command]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: period}
        to_if_alone:
          - {key_code: period, modifiers: [command, shift]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # <S-Space> = add down to selection
      - type: basic
        from:
          key_code: spacebar
          modifiers: {mandatory: [shift]}
        to:
          - {key_code: down_arrow, modifiers: [shift]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Basic File Operations
      # d = delete
      - type: basic
        from: {key_code: d}
        to_if_alone:
          - key_code: delete_or_backspace
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # y = yank
      - type: basic
        from: {key_code: z} # y = z in German Keyboard
        to_if_alone:
          - key_code: c
            modifiers: [command]
          - shell_command: osascript -e 'display notification "File(s)" with title "✅ Copied"'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      - type: basic
        from: {key_code: "y"}
        to:
          - key_code: c
            modifiers: [command]
          - shell_command: osascript -e 'display notification "File(s)" with title "✅ Copied"'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *not-German-keyboard]
      # r = replicate (duplicate)
      - type: basic
        from: {key_code: r}
        to_if_alone:
          - key_code: d
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # p = paste
      - type: basic
        from: {key_code: p}
        to_if_alone:
          - key_code: v
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *move-inactive, *not-search-mode]
      # i = info window
      - type: basic
        from: {key_code: i}
        to:
          - key_code: i
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # v = view window
      - type: basic
        from: {key_code: v}
        to_if_alone:
          - key_code: j
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # u = undo
      - type: basic
        from: {key_code: u}
        to_if_alone:
          - key_code: z
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *not-German-keyboard]
      - type: basic
        from: {key_code: u}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      # U = redo
      - type: basic
        from:
          key_code: u
          modifiers: {mandatory: [shift]}
        to:
          - key_code: z
            modifiers: [command, shift]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *not-German-keyboard]
      - type: basic
        from:
          key_code: u
          modifiers: {mandatory: [shift]}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command, shift]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      # e = eject (if volume)
      - type: basic
        from: {key_code: e}
        to_if_alone:
          - key_code: e
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # N = New Folder
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [shift]}
        to:
          - key_code: n
            modifiers: [command, shift]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # M = Move selection to new folder
      - type: basic
        from:
          key_code: m
          modifiers: {mandatory: [shift]}
        to:
          - key_code: n
            modifiers: [command, control]
          - *enter-insert-mode # enters insert mode since folder renaming is also triggered
          - *insert-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # n = New File
      - type: basic
        from: {key_code: n}
        to_if_alone:
          - shell_command: |
              folder=$(osascript -e '
                tell application "Finder"
                  if exists Finder window 1 then return POSIX path of (target of Finder window 1 as alias)
                end tell')
              touch "$folder/new"
              open -R "$folder/new"
          - key_code: vk_none
            hold_down_milliseconds: 750 # delay needed as Finder needs to pick up new file
          - key_code: return_or_enter
          - *enter-insert-mode
          - *insert-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # S = Symlink
      - type: basic
        from:
          key_code: s
          modifiers: {mandatory: [shift]}
        to:
          - shell_command: |
              sel=$(osascript -e 'tell application "Finder" to return POSIX path of (selection as alias)')
              fileNoExt=${sel%.*}
              ext=${sel##*.}
              symlinkName="${fileNoExt}-symlink.$ext"
              ln -sf "$sel" "$symlinkName"
              open -R "$symlinkName"
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      # z = zip files
      - type: basic
        from: {key_code: "y"} # y and z switched on German keyboard
        to_if_alone:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Compress" of menu "File" of menu bar 1
                end tell'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      - type: basic
        from: {key_code: z}
        to:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Compress" of menu "File" of menu bar 1
                end tell'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *not-German-keyboard]
      # toggle hidden files visibility
      - type: basic
        from: {key_code: period}
        to:
          - {key_code: period, modifiers: [command, shift]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Navigation
      # o = open fold
      - type: basic
        from: {key_code: o}
        to_if_alone:
          - key_code: right_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # c = close fold
      - type: basic
        from: {key_code: c}
        to_if_alone:
          - key_code: left_arrow
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # <C-h> = History Back
      - type: basic
        from:
          key_code: h
          modifiers: {mandatory: [control]}
        to_if_alone:
          - key_code: semicolon # German ö
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      # <C-l> = History Forward
      - type: basic
        from:
          key_code: l
          modifiers: {mandatory: [control]}
        to:
          - key_code: quote # German ä
            modifiers: [command]
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *is-German-keyboard]
      #─────────────────────────────────────────────────────────────────────────
      # Search Mode
      # Enter/Exit
      - type: basic
        from: {key_code: f}
        to_if_alone:
          - *enter-search-mode
          - *search-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from: {key_code: caps_lock}
        to_if_alone:
          - *leave-search-mode
          - *remove-search-notice
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: escape}
        to:
          - *leave-search-mode
          - *remove-search-notice
        conditions: [*is-finder, *is-search-mode]
      # One-Char-Searches
      - type: basic
        from: {key_code: a}
        to: [{key_code: a}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: b}
        to: [{key_code: b}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: c}
        to: [{key_code: c}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: d}
        to: [{key_code: d}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: e}
        to: [{key_code: e}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: f}
        to: [{key_code: f}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: g}
        to: [{key_code: g}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: h}
        to: [{key_code: h}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: i}
        to: [{key_code: i}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: j}
        to: [{key_code: j}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: k}
        to: [{key_code: k}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: l}
        to: [{key_code: l}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: m}
        to: [{key_code: m}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: n}
        to: [{key_code: n}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: o}
        to: [{key_code: o}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: p}
        to: [{key_code: p}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: q}
        to: [{key_code: q}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: r}
        to: [{key_code: r}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: s}
        to: [{key_code: s}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: t}
        to: [{key_code: t}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: u}
        to: [{key_code: u}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: v}
        to: [{key_code: v}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: w}
        to: [{key_code: w}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: x}
        to: [{key_code: x}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: y}
        to: [{key_code: y}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: z}
        to: [{key_code: z}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: period}
        to: [{key_code: period}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "0"}
        to: [{key_code: "0"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "1"}
        to: [{key_code: "1"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "2"}
        to: [{key_code: "2"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "3"}
        to: [{key_code: "3"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "4"}
        to: [{key_code: "4"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "5"}
        to: [{key_code: "5"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "6"}
        to: [{key_code: "6"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "7"}
        to: [{key_code: "7"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "8"}
        to: [{key_code: "8"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      - type: basic
        from: {key_code: "9"}
        to: [{key_code: "9"}, *leave-search-mode, *remove-search-notice]
        conditions: [*is-finder, *is-search-mode]
      #─────────────────────────────────────────────────────────────────────────
      # MOVE
      # m = move
      - type: basic
        from: {key_code: m}
        to:
          - key_code: c
            modifiers: [command]
          - *start-move
          - *move-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # p / cmd+v = paste content marked for move thing
      - type: basic
        from: {key_code: p}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *move-active]
        to:
          - key_code: v
            modifiers: [command, option]
          - *end-move
          - *remove-move-notice
      - type: basic
        from:
          key_code: v
          modifiers: {mandatory: [command]}
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *move-active]
        to:
          - key_code: v
            modifiers: [command, option]
          - *end-move
          - *remove-move-notice
      # y / cmd+c = yank, which also aborts move
      - type: basic
        from: {key_code: "y"}
        to:
          - key_code: c
            modifiers: [command]
          - *end-move
          - *remove-move-notice
          - shell_command: osascript -e 'display notification "File(s)" with title "✅ Copied"'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *move-active, *not-German-keyboard]
      - type: basic
        from: {key_code: z} # y and z switched on German keyboard
        to:
          - key_code: c
            modifiers: [command]
          - *end-move
          - *remove-move-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *move-active, *is-German-keyboard]
      - type: basic
        from:
          key_code: c
          modifiers: {mandatory: [command]}
        to:
          - key_code: c
            modifiers: [command]
          - *end-move
          - *remove-move-notice
        conditions: [*is-finder, *not-insert-mode, *not-search-mode, *move-active]
      # Esc = Abort move
      - type: basic
        from: {key_code: caps_lock}
        to_if_alone:
          - *end-move
          - *remove-move-notice
        conditions: [*is-finder, *move-active]
      - type: basic
        from: {key_code: escape}
        to:
          - *end-move
          - *remove-move-notice
        conditions: [*is-finder, *move-active]
      #─────────────────────────────────────────────────────────────────────────
      #─────────────────────────────────────────────────────────────────────────
      # Sidebar/Preview/Pathbar Toggle
      - type: basic
        from:
          key_code: "1"
          modifiers: {optional: [command]}
        to:
          - key_code: s
            modifiers:
              - command
              - option
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: "0"
          modifiers: {optional: [command]}
        to:
          - key_code: p
            modifiers:
              - command
              - shift
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      - type: basic
        from:
          key_code: "9"
          modifiers: {optional: [command]}
        to:
          - key_code: p
            modifiers:
              - command
              - option
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # copy path
      - type: basic
        from:
          key_code: p
          modifiers: {mandatory: [control]}
        to:
          - key_code: c
            modifiers: [command, option]
          - shell_command: osascript -e 'display notification "File path" with title "✅ Copied"'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
      # copy name
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [control]}
        to:
          - key_code: return_or_enter
          - key_code: a
            modifiers: [command]
          - key_code: c
            modifiers: [command]
          - key_code: return_or_enter
          - shell_command: osascript -e 'display notification "File name" with title "✅ Copied"'
        conditions: [*is-finder, *not-insert-mode, *not-search-mode]
