title: "Finder Vim Controls & Other Commands"
homepage: https://github.com/chrisgrieser/dotfiles/karabiner
anchors:
  - condition:
      - &is-finder
        type: frontmost_application_if
        bundle_identifiers:
          - ^com\.apple\.finder$
      - &is-rename-mode
        type: variable_if
        name: FINDER_RENAME_MODE
        value: true
      - &is-normal-mode
        type: variable_unless
        name: FINDER_RENAME_MODE
        value: true
      - &cut-active
        type: variable_if
        name: CUT_ACTIVE
        value: true
      - &cut-inactive
        type: variable_unless
        name: CUT_ACTIVE
        value: true
  - to:
      - &enter-rename-mode
        set_variable:
          name: FINDER_RENAME_MODE
          value: true
      - &leave-rename-mode
        set_variable:
          name: FINDER_RENAME_MODE
          value: false
      - &end-cut
        set_variable:
          name: CUT_ACTIVE
          value: false
      - &rename-notice
        set_notification_message:
          id: insert-notice
          text: "✏️ INSERT"
      - &remove-rename-notice
        set_notification_message:
          id: insert-notice
          text: ""
      - &remove-cut-notice
        set_notification_message:
          id: cut-notice
          text: ""
#───────────────────────────────────────────────────────────────────────────────
rules:
  - description: "Finder Vim Controls"
    manipulators:
      # hjkl, ggG
      - type: basic
        from: {key_code: j}
        to:
          - key_code: down_arrow
        conditions: [*is-finder, *is-normal-mode]
      - type: basic
        from: {key_code: k}
        to:
          - key_code: up_arrow
        conditions: [*is-finder, *is-normal-mode]
      - type: basic
        from: {key_code: h}
        to:
          - key_code: up_arrow
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      - type: basic
        from: {key_code: l}
        to:
          - key_code: down_arrow
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      - type: basic
        from: {key_code: g}
        to:
          - key_code: up_arrow
            modifiers: [option]
        conditions: [*is-finder, *is-normal-mode]
      - type: basic
        from:
          key_code: g
          modifiers: {mandatory: [shift]}
        to:
          - key_code: down_arrow
            modifiers: [option]
        conditions: [*is-finder, *is-normal-mode]
      #─────────────────────────────────────────────────────────────────────────
      # rename mode - enter
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *rename-notice
          - *enter-rename-mode
        conditions: [*is-finder, *is-normal-mode]
      - type: basic # fix for Alfred
        from:
          key_code: spacebar
          modifiers: {mandatory: [command]}
        to:
          - key_code: spacebar
            modifiers: [command]
          - *rename-notice
          - *enter-rename-mode
        conditions: [*is-finder, *is-normal-mode]

      # rename mode - leave
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *remove-rename-notice
          - *leave-rename-mode
        conditions: [*is-finder, *is-rename-mode]
      - type: basic
        from: {key_code: caps_lock}
        to:
          - key_code: escape
          - *remove-rename-notice
          - *leave-rename-mode
        conditions: [*is-rename-mode]
      - type: basic
        from:
          key_code: w
          modifiers: {mandatory: [command]}
        to:
          - key_code: w
            modifiers: [command]
          - *remove-rename-notice
          - *leave-rename-mode
        conditions: [*is-finder]
      #─────────────────────────────────────────────────────────────────────────
      # Basic File Operations
      # d = delete
      - type: basic
        from: {key_code: d}
        to:
          - key_code: delete_or_backspace
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      # y = yank
      - type: basic
        from: {key_code: z} # y = z in German Keyboard
        to:
          - key_code: c
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      # r = replicate (duplicate)
      - type: basic
        from: {key_code: r}
        to:
          - key_code: d
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      # p = paste
      - type: basic
        from: {key_code: p}
        to:
          - key_code: v
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      # u = undo
      - type: basic
        from: {key_code: u}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      # U = redo
      - type: basic
        from:
          key_code: u
          modifiers: {mandatory: [shift]}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command, shift]
        conditions: [*is-finder, *is-normal-mode]
      # N = New Folder
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [shift]}
        to:
          - key_code: n
            modifiers: [command, shift]
        conditions: [*is-finder, *is-normal-mode]
      # n = New File
      - type: basic
        from: {key_code: n}
        to:
          - shell_command: |
              folder=$(osascript -e '
                tell application "Finder"
                  if exists Finder window 1 then
                    return POSIX path of (target of Finder window 1 as alias)
                  end if
                end tell')
              touch "$folder/new"
              open -R "$folder/new"
          - key_code: vk_none
            hold_down_milliseconds: 750 # delay needed as Finder needs a to pick up new file
          - key_code: return_or_enter
          - *enter-rename-mode
          - *rename-notice
        conditions: [*is-finder, *is-normal-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Navigation
      # o = pseudo-quick-switcher
      - type: basic
        from: {key_code: o}
        to:
          - key_code: g
            modifiers: [command, shift]
        conditions: [*is-finder, *is-normal-mode]
      # f = open fold
      - type: basic
        from: {key_code: f}
        to:
          - key_code: right_arrow
        conditions: [*is-finder, *is-normal-mode]
      # f = close fold
      - type: basic
        from:
          key_code: f
          modifiers: {mandatory: [shift]}
        to:
          - key_code: left_arrow
        conditions: [*is-finder, *is-normal-mode]
      # <C-h> = History Back
      - type: basic
        from:
          key_code: h
          modifiers: {mandatory: [control]}
        to:
          - key_code: semicolon # German ö
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
      # <C-l> = History Forward
      - type: basic
        from:
          key_code: h
          modifiers: {mandatory: [control]}
        to:
          - key_code: quote # German ä
            modifiers: [command]
        conditions: [*is-finder, *is-normal-mode]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "Finder Basic Control"
    manipulators:
      # Sidebar
      - type: basic
        from:
          key_code: "1"
          modifiers: {mandatory: [command]}
        to:
          - key_code: s
            modifiers:
              - command
              - option
        conditions: [*is-finder]
      # copy path
      - type: basic
        from:
          key_code: p
          modifiers: {mandatory: [control]}
        to:
          - key_code: c
            modifiers:
              - command
              - option
        conditions: [*is-finder, *is-normal-mode]
      # copy name
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [control]}
        to:
          - key_code: return_or_enter
          - key_code: a
            modifiers: [command]
          - key_code: c
            modifiers: [command]
          - key_code: return_or_enter
        conditions: [*is-finder, *is-normal-mode]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "Cut & Paste"
    manipulators:
      - type: basic
        from:
          key_code: x
          modifiers:
            mandatory:
              - command
        to:
          - key_code: c
            modifiers:
              - command
          - set_variable:
              name: CUT_ACTIVE
              value: true
          - set_notification_message:
              id: cut-notice
              text: "✂️ Cut"
        conditions: [*is-finder]
      - type: basic
        from:
          key_code: v
          modifiers:
            mandatory:
              - command
        conditions:
          - *cut-active
          - *is-finder
        to:
          - key_code: v
            modifiers:
              - command
              - option
          - *end-cut
          - *remove-cut-notice
      # Abort with Hyper/Esc
      - type: basic
        from:
          key_code: caps_lock
        conditions:
          - *cut-active
          - *is-finder
        to:
          - *end-cut
          - *remove-cut-notice
      - type: basic
        from:
          key_code: escape
        conditions:
          - *cut-active
          - *is-finder
        to:
          - *end-cut
          - *remove-cut-notice
      # Abort when deciding to copy instead
      - type: basic
        from:
          key_code: c
          modifiers:
            mandatory:
              - command
        conditions:
          - *cut-active
          - *is-finder
        to:
          - key_code: c
            modifiers:
              - command
          - *end-cut
          - *remove-cut-notice
  #─────────────────────────────────────────────────────────────────────────────
  - description: "Open Locations"
    manipulators:
      # Hyper + ⌫ = Open Trash
      - type: basic
        from:
          key_code: delete_or_backspace
          modifiers:
            mandatory:
              - command
              - shift
              - option
              - control
        to:
          - shell_command: open -a "Finder" ~/.Trash
          - key_code: vk_none
            hold_down_milliseconds: 200
          - key_code: "2" # list view
            modifiers:
              - command
      # Hyper + F: Open $WD
      - type: basic
        from:
          key_code: f
          modifiers:
            mandatory:
              - control
              - command
              - shift
              - option
        to:
          - shell_command: open "$HOME/Library/Mobile Documents/com~apple~CloudDocs/File Hub/"
